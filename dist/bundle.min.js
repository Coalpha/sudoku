var Sudoku = (function (exports) {
    'use strict';

    var makeCellGroupId = function (type, index) { return (type + ":" + index); };
    var Matrix = function (size) { return Array(size).fill(0).map(function () { return Array(size).fill(null); }); };
    var CellGroup = (function () {
        function CellGroup(identifier, coords) {
            return ({
                identifier,
                coords,
                values: new Set(Array(coords.length).fill(0).map(function (v, i) { return i; }))
            });
        }
        return CellGroup;
    }());
    var Sudoku = (function () {
        function Sudoku(blockSize) {
            var _this = this;
            this.blockSize = blockSize;
            this.maxValue = Math.pow(blockSize, 2);
            this.totalSize = Math.pow(this.maxValue, 2);
            this.changes = [];
            this.blocks = Array(this.maxValue).fill(0).map(function (v, blockIdx) {
                var id = makeCellGroupId('block', blockIdx);
                _this.changes.push(id);
                var block = Array(_this.maxValue).fill(0).map(function (_, cellIdx) { return [cellIdx % blockSize, 0 | cellIdx / blockSize]; });
                return new CellGroup(id, block);
            });
            this.rows = Array(this.maxValue).fill(0).map(function (v, y) {
                var id = makeCellGroupId('row', y);
                _this.changes.push(id);
                var row = Array(_this.maxValue).fill(0).map(function (_, x) { return [x, y]; });
                return new CellGroup(id, row);
            });
            this.cols = Array(this.maxValue).fill(0).map(function (v, x) {
                var id = makeCellGroupId('col', x);
                _this.changes.push(id);
                var col = Array(_this.maxValue).fill(0).map(function (_, y) { return [x, y]; });
                return new CellGroup(id, col);
            });
            this.matrix = Matrix(this.totalSize);
        }
        return Sudoku;
    }());

    exports.Sudoku = Sudoku;

    return exports;

}({}));
//# sourceMappingURL=bundle.min.js.map
