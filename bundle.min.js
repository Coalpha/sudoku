var Sudoku=function(n){"use strict";var r=function(n,r){return n+":"+r},t=function(n){return Array(n).fill(0).map(function(){return Array(n).fill(null)})},e=function(){return function(n,r){return{identifier:n,coords:r,values:new Set(Array(r.length).fill(0).map(function(n,r){return r}))}}}(),u=function(){return function(n,u){var a=this;void 0===n&&(n=3),this.blockSize=u.length,this.maxValue=Math.pow(n,2),this.totalSize=Math.pow(n,3),this.changes=[];var i=Array(this.maxValue).fill(0);this.allPossibleValues,this.blocks=i.map(function(t,u){var i=r("block",u);a.changes.push(i);var o=Array(a.maxValue).fill(0).map(function(r,t){return[t%n,0|t/n]});return new e(i,o)}),this.rows=i.map(function(n,t){var u=r("row",t);a.changes.push(u);var o=i.map(function(n,r){return[r,t]});return new e(u,o)}),this.cols=i.map(function(n,t){var u=r("col",t);a.changes.push(u);var o=i.map(function(n,r){return[t,r]});return new e(u,o)}),this.matrix=u||t(this.totalSize),this.allPossibleValues=i.map(function(n,r){return r})}}();return n.iterateChanges=function(n){n.changes.map(function(r){return function(n,r){return{group:r,values:function(n,r){var t=r.split(":");return n[t[0]][t[1]]}(n,r).coords.map(function(r){var t=0|r[0]/n.blockSize,e=0|r[1]/n.blockSize,u=n.blocks[parseInt(""+e+t,n.blockSize)],a=n.rows[r[1]],i=n.cols[r[0]],o=new Set(u.values.concat(a.values,i.values));return n.allPossibleValues.filter(function(n){return!o.has(n)})})}}(n,r)});if(n.changes=[],n.changes.length<1)throw function(n){return n.matrix.every(function(n){return n.every(Number.isInteger)})}(n)?Error("Nothing went wrong!"):Error("this sudoku is warm and bad")},n.Sudoku=u,n}({});
