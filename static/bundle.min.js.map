{"version":3,"file":"bundle.min.js","sources":["../src/structs.ts"],"sourcesContent":["interface Coordinate {\n  [index: number]: number;\n}\nenum CellGroupType {\n  block,\n  row,\n  col,\n}\nexport const makeCellGroupId = (type: CellGroupType, index: number) : string => `${type}:${index}`;\nexport const Matrix = (size: number) : Array<Array<any>> => Array(size).fill(0).map(() => Array(size));\nclass CellGroup {\n  identifier: string;\n  values: Set<number>;\n  coords: Array<Coordinate>\n  constructor(identifier: string, coords: Array<Coordinate>) {\n    return ({\n      identifier,\n      coords,\n      values: new Set(Array(coords.length).fill(0).map((v, i) => i)),\n    });\n  }\n}\nexport default class Sudoku {\n  blocks: Array<CellGroup>;\n  rows: Array<CellGroup>;\n  cols: Array<CellGroup>;\n  changes: Array<string>;\n  constructor(size: number) {\n    this.rows = Array(size).fill(0).map((v, y) => {\n      const id = makeCellGroupId(CellGroupType.row, y);\n      const row = Array(size).fill(0).map((_, x) => [x, y]);\n      return new CellGroup(id, row);\n    });\n  }\n}\n"],"names":[],"mappings":";;;IAGA,IAAK,aAIJ;IAJD,WAAK,aAAa;QAChB,mDAAK,CAAA;QACL,+CAAG,CAAA;QACH,+CAAG,CAAA;IACL,CAAC,EAJI,aAAa,KAAb,aAAa,QAIjB;AACD,IAAO,IAAM,eAAe,GAAG,UAAC,IAAmB,EAAE,KAAa,IAAc,QAAG,IAAI,SAAI,KAAK,IAAE,CAAC;AACnG,IACA;QAIE,mBAAY,UAAkB,EAAE,MAAyB;YACvD,QAAQ;gBACN,UAAU;gBACV,MAAM;gBACN,MAAM,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAA,CAAC,CAAC;aAC/D,EAAE;SACJ;QACH,gBAAC;IAAD,CAAC,IAAA;AACc;QAKb,gBAAY,IAAY;YACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;gBACvC,IAAM,EAAE,GAAG,eAAe,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACjD,IAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAC;gBACtD,OAAO,IAAI,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;aAC/B,CAAC,CAAC;SACJ;QACH,aAAC;IAAD,CAAC;;;;;;;;;;"}